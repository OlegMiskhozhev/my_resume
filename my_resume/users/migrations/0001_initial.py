# Generated by Django 4.2.21 on 2025-08-09 18:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('resume', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users_photo', verbose_name='Фото')),
                ('position', models.CharField(blank=True, max_length=256, null=True, verbose_name='Должность')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('location', models.CharField(blank=True, max_length=256, null=True, verbose_name='Место проживания')),
                ('phone_number', models.CharField(blank=True, max_length=256, null=True, verbose_name='Номер телефона')),
                ('github_profile', models.CharField(blank=True, max_length=256, null=True, verbose_name='GitHub профиль')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(help_text='В процентах от 0 до 100', max_length=256, verbose_name='Уровень освоения')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resume.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'навык пользователя',
                'verbose_name_plural': 'Навыки пользователей',
                'ordering': ('id',),
                'default_related_name': 'user_skills',
            },
        ),
        migrations.CreateModel(
            name='UserProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('involvement', models.CharField(max_length=256)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resume.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'проект пользователя',
                'verbose_name_plural': 'Проекты пользователя',
                'ordering': ('-id',),
                'default_related_name': 'user_projects',
            },
        ),
        migrations.CreateModel(
            name='UserEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_program', models.DateField(verbose_name='Начало обучения')),
                ('end_program', models.DateField(verbose_name='Окончание обучения')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resume.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'образование пользователя',
                'verbose_name_plural': 'Образования пользователей',
                'ordering': ('-end_program',),
                'default_related_name': 'user_educations',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='education',
            field=models.ManyToManyField(blank=True, through='users.UserEducation', to='resume.course', verbose_name='Образование'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='project',
            field=models.ManyToManyField(blank=True, through='users.UserProjects', to='resume.project', verbose_name='Проект пользователя'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='skill',
            field=models.ManyToManyField(blank=True, through='users.UserSkills', to='resume.skill', verbose_name='Навыки'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='work_place',
            field=models.ManyToManyField(blank=True, to='resume.workplace', verbose_name='Место работы'),
        ),
    ]
